[{"C:\\Revature\\Code\\Project0-GuitarStore-TNB\\client\\src\\App.js":"1","C:\\Revature\\Code\\Project0-GuitarStore-TNB\\client\\src\\index.js":"2","C:\\Revature\\code\\project0-guitarstore-tnb\\client\\src\\App.js":"3","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\App.js":"4","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\index.js":"5","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\layout\\Landing.js":"6","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\layout\\NavbarComponent.js":"7","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\auth\\Login.js":"8","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\routing\\Routes.js":"9","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\profile\\Profiles.js":"10","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\auth\\SignUp.js":"11","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\profile\\UserInformationCard.js":"12","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\routing\\AuthRoutes.js":"13","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\util\\API.js":"14","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\product\\ProductCard.js":"15","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\product\\Products.js":"16","C:\\Revature\\Code\\project0-guitarstore-tnb\\client\\src\\App.js":"17","C:\\Revature\\Code\\project0-guitarstore-tnb\\client\\src\\components\\profile\\UserInformationCard.js":"18","C:\\Revature\\Code\\project0-guitarstore-tnb\\client\\src\\components\\product\\Products.js":"19","C:\\Revature\\Code\\project0-guitarstore-tnb\\client\\src\\components\\util\\API.js":"20","C:\\Revature\\Code\\project0-guitarstore-tnb\\client\\src\\components\\product\\ProductCard.js":"21","C:\\Revature\\Code\\project0-guitarstore-tnb\\client\\src\\components\\routing\\Routes.js":"22","C:\\Revature\\Code\\project0-guitarstore-tnb\\client\\src\\components\\layout\\NavbarComponent.js":"23","C:\\Revature\\Code\\project0-guitarstore-tnb\\client\\src\\components\\layout\\Landing.js":"24","C:\\Revature\\Code\\project0-guitarstore-tnb\\client\\src\\components\\profile\\Profiles.js":"25","C:\\Revature\\Code\\project0-guitarstore-tnb\\client\\src\\components\\auth\\Login.js":"26","C:\\Revature\\Code\\project0-guitarstore-tnb\\client\\src\\components\\auth\\SignUp.js":"27"},{"size":677,"mtime":1607201390083,"results":"28","hashOfConfig":"29"},{"size":146,"mtime":1606766838767,"results":"30","hashOfConfig":"29"},{"size":607,"mtime":1606860692482,"results":"31","hashOfConfig":"32"},{"size":736,"mtime":1607895534282,"results":"33","hashOfConfig":"34"},{"size":146,"mtime":1606766838767,"results":"35","hashOfConfig":"34"},{"size":7149,"mtime":1607896647287,"results":"36","hashOfConfig":"34"},{"size":4611,"mtime":1607914324547,"results":"37","hashOfConfig":"34"},{"size":1819,"mtime":1607964325488,"results":"38","hashOfConfig":"34"},{"size":2733,"mtime":1607896113873,"results":"39","hashOfConfig":"34"},{"size":3274,"mtime":1607962882444,"results":"40","hashOfConfig":"34"},{"size":2384,"mtime":1607964241561,"results":"41","hashOfConfig":"34"},{"size":3165,"mtime":1607897656817,"results":"42","hashOfConfig":"34"},{"size":360,"mtime":1607895592977,"results":"43","hashOfConfig":"34"},{"size":2279,"mtime":1607966880164,"results":"44","hashOfConfig":"34"},{"size":5013,"mtime":1607962515052,"results":"45","hashOfConfig":"34"},{"size":2804,"mtime":1607965714827,"results":"46","hashOfConfig":"34"},{"size":780,"mtime":1608049944247,"results":"47","hashOfConfig":"48"},{"size":3881,"mtime":1608050785609,"results":"49","hashOfConfig":"48"},{"size":3020,"mtime":1608051434693,"results":"50","hashOfConfig":"48"},{"size":1148,"mtime":1607979033094,"results":"51","hashOfConfig":"48"},{"size":4856,"mtime":1608051455559,"results":"52","hashOfConfig":"48"},{"size":2402,"mtime":1608051495964,"results":"53","hashOfConfig":"48"},{"size":1810,"mtime":1608051413824,"results":"54","hashOfConfig":"48"},{"size":6118,"mtime":1608051531152,"results":"55","hashOfConfig":"48"},{"size":2795,"mtime":1608048025468,"results":"56","hashOfConfig":"48"},{"size":1871,"mtime":1608050332308,"results":"57","hashOfConfig":"48"},{"size":2420,"mtime":1608050476602,"results":"58","hashOfConfig":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uggycn",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cr2eb6",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"10g6l31",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12t0svz",{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Revature\\Code\\Project0-GuitarStore-TNB\\client\\src\\App.js",[],"C:\\Revature\\Code\\Project0-GuitarStore-TNB\\client\\src\\index.js",[],"C:\\Revature\\code\\project0-guitarstore-tnb\\client\\src\\App.js",[],"C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\App.js",[],["120","121"],"C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\index.js",[],"C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\layout\\Landing.js",[],"C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\layout\\NavbarComponent.js",["122","123","124"],"import React, { Fragment } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { NavItem, NavLink, Navbar, Nav, Form, FormControl, Button, Dropdown } from \"react-bootstrap\";\r\nimport API from \"../util/API\";\r\n\r\nconst NavbarComponent = (props) => {\r\n\r\n    const user = localStorage.getItem(\"user\")\r\n    const location = useLocation().pathname\r\n    \r\n    const logout = () => {\r\n        try {\r\n            API.signOut()\r\n            .then(props.setUser())\r\n            .then(localStorage.clear())\r\n        } catch(err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    const links = (\r\n        <Fragment>\r\n            <Nav.Item>\r\n                <Nav.Link href=\"/products\" >Products</Nav.Link>\r\n            </Nav.Item>\r\n            { location === \"/products\" ? (\r\n            <Fragment>\r\n                <Dropdown as={NavItem} className=\"mr-auto\">\r\n                    <Dropdown.Toggle as={NavLink}>Brands</Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                        <Dropdown.Item onClick={() => props.getProductsByBrand(1) }>Guitar Center</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => props.getProductsByBrand(2) }>Ibanez</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => props.getProductsByBrand(3) }>Gibson</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n                <Dropdown as={NavItem} className=\"mr-auto mr-2\">\r\n                    <Dropdown.Toggle as={NavLink}>Department</Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                        <Dropdown.Item onClick={() => props.getProductsByDepartment(1) }>Products</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => props.getProductsByDepartment(2) }>Basses</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => props.getProductsByDepartment(3) }>Amps and Effects</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            </Fragment>\r\n             ) : null }\r\n        </Fragment>\r\n  \r\n    );\r\n\r\n    const adminAuthLinks = (\r\n        <Fragment>\r\n            <Nav.Item>\r\n                <Nav.Link href=\"/products\">Products</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                <Nav.Link href=\"/employees\">Employees</Nav.Link>\r\n            </Nav.Item>\r\n            { location === \"/products\" ? (\r\n            <Fragment>\r\n                <Dropdown as={NavItem} className=\"mr-auto\">\r\n                    <Dropdown.Toggle as={NavLink}>Brands</Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                        <Dropdown.Item onClick={() => props.getProductsByBrand(1) }>Guitar Center</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => props.getProductsByBrand(2) }>Ibanez</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => props.getProductsByBrand(3) }>Gibson</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n                <Dropdown as={NavItem} className=\"mr-auto mr-2\">\r\n                    <Dropdown.Toggle as={NavLink}>Department</Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                        <Dropdown.Item onClick={() => props.getProductsByDepartment(1) }>Products</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => props.getProductsByDepartment(2) }>Basses</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => props.getProductsByDepartment(3) }>Amps and Effects</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            </Fragment>\r\n             ) : null }\r\n        </Fragment>\r\n    )\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n            <Navbar.Brand href=\"/\">Home</Navbar.Brand>\r\n                <Nav className=\"container-fluid\">\r\n                    {user ? user.charAt(user.length - 2) == 1 ? adminAuthLinks : links : links}\r\n                    {user ? (\r\n                        <Nav.Item className=\"ml-auto\">\r\n                            <Button variant=\"info\" className=\"justify-content-end\" \r\n                            onClick={() => logout()}>\r\n                                Sign Out\r\n                            </Button>\r\n                        </Nav.Item>\r\n                    ) : (\r\n                        <Nav.Item>\r\n                            <Button variant=\"info\" className=\"justify-content-end\" href=\"/login\" >Login</Button>\r\n                        </Nav.Item>\r\n                    )}\r\n                </Nav>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nexport default NavbarComponent;","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\auth\\Login.js",[],"C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\routing\\Routes.js",[],"C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\profile\\Profiles.js",["125"],"import React from 'react'\r\nimport { Button, Form, FormGroup } from 'react-bootstrap';\r\nimport API from '../util/API';\r\nimport UserInformationCard from './UserInformationCard';\r\nconst user = localStorage.getItem(\"user\");\r\n\r\nclass Profiles extends React.Component {\r\n\r\n    state = {\r\n        employees: [{\r\n            \"uniqueID\": 1,\r\n            \"username\": \"ruben.dominguez\",\r\n            \"email\": \"ruben.dominguez@mail.com\",\r\n            \"userType_UID\": 1\r\n        }, {\r\n            \"uniqueID\": 2,\r\n            \"username\": \"toby.boudreaux\",\r\n            \"email\": \"toby.boudreaux@mail.com\",\r\n            \"userType_UID\": 1\r\n        }],\r\n        userName: \"\",\r\n        password: \"\",\r\n        email: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n        API.getUsers()\r\n        .then(res => res)\r\n        .then(data => console.log(data))\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n\r\n    postUser() {\r\n        const userObj = {\r\n            uniqueID: 0,\r\n            username: this.state.userName,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            userType_UID: 2\r\n        }\r\n        try {\r\n            API.createUser(userObj)\r\n        .then(res => res.data)\r\n        .then(data => console.log(data))\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Employees</h1>\r\n                <Form onSubmit={e => {\r\n                        e.preventDefault();\r\n                        this.postUser();    \r\n                    }}\r\n                    >\r\n                    <h1>Create Employee</h1>\r\n                    <br />\r\n                    <FormGroup>\r\n                    <input\r\n                        type=\"username\"\r\n                        name=\"username\"\r\n                        value={this.state.userName}\r\n                        placeholder=\"johnnyboy1337\"\r\n                        onChange={e => this.setState({ userName: e.target.value })}\r\n                    ></input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={this.state.email}\r\n                        placeholder=\"john@gmail.com\"\r\n                        onChange={e => this.setState({ email: e.target.value })}\r\n                    ></input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={this.state.password}\r\n                        placeholder=\"Password\"\r\n                        onChange={e => this.setState({ password: e.target.value })}\r\n                    ></input>\r\n                    </FormGroup>\r\n                    <Button type=\"submit\"  block={true}>\r\n                        Create\r\n                    </Button>\r\n                </Form>\r\n                {this.state.employees.map(e => (\r\n                    <UserInformationCard key={e.uniqueID} employee={e} />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Profiles\r\n","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\auth\\SignUp.js",[],"C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\profile\\UserInformationCard.js",["126"],"import React, {useState} from 'react'\r\nimport { Card, Form, Button, FormGroup } from 'react-bootstrap'\r\nimport API from '../util/API';\r\n\r\nconst UserInformationCard = (props) => {\r\n\r\n    const [show, setShow] = useState(false)\r\n    const [userUsername, setUserUsername] = useState(\"\");\r\n    const [userPassword, setUserPassword] = useState(\"\");\r\n    const [userEmail, setUserEmail] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const deleteUser = () => {\r\n        API.deleteUser(props.employee.uniqueID)\r\n    }\r\n\r\n    const editUser = () => {\r\n        const userObj = {\r\n            uniqueID: props.employee.uniqueID,\r\n            username: userUsername,\r\n            email: userEmail,\r\n            password: userPassword,\r\n            userType_UID: props.employee.userType_UID\r\n        }\r\n        API.editUser(props.employee.uniqueID, userObj);\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Card.Title>Email: {props.employee.email}</Card.Title>\r\n                <Card.Text>UserName: {props.employee.username}</Card.Text>\r\n                <Card.Text>Role: {props.employee.userType_UID}</Card.Text>\r\n                <Card.Footer>\r\n                    <Button onClick={() => setShow(!show)}>Edit User</Button>\r\n                    <Button onClick={() => deleteUser()}>Delete User</Button>\r\n                    {show ? (\r\n                    <Form onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    editUser();\r\n                    }}>\r\n                        <br />\r\n                        <FormGroup>\r\n                        <input\r\n                            type=\"username\"\r\n                            name=\"username\"\r\n                            value={userUsername}\r\n                            placeholder=\"johnnyboy1337\"\r\n                            onChange={e => setUserUsername(e.target.value)}\r\n                        ></input>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                        <input\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            value={userEmail}\r\n                            placeholder=\"john@gmail.com\"\r\n                            onChange={e => setUserEmail(e.target.value)}\r\n                        ></input>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            value={userPassword}\r\n                            placeholder=\"Password\"\r\n                            onChange={e => setUserPassword(e.target.value)}\r\n                        ></input>\r\n                        </FormGroup>\r\n                        <Button type=\"submit\" disabled={loading} block={true}>\r\n                        {loading ? \"Loading...\" : \"Submit Changes\"}\r\n                        </Button>\r\n                    </Form>\r\n                ) : null}\r\n                </Card.Footer>\r\n                \r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserInformationCard\r\n","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\routing\\AuthRoutes.js",[],"C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\util\\API.js",["127","128","129"],"import axios from \"axios\";\r\n\r\nexport default {\r\n    baseURL: \"http://3.139.235.28:8080/project0\",\r\n    getUsers: function(){\r\n        return axios.get(`${this.baseURL}/user}`, { withCredentials: true });\r\n    },\r\n    getUserByID: function(id){\r\n        return axios.get(`${this.baseURL}/user/${id}`, { withCredentials: true })\r\n    },\r\n    createUser: function(userObj) {\r\n        return axios.post(`${this.baseURL}/user`, userObj), { withCredentials: true };\r\n    }, \r\n    editUser: function(id, userObj) {\r\n        return axios.put(`${this.baseURL}/user/${id}`, userObj, { withCredentials: true })\r\n    }, \r\n    deleteUser: function(id) {\r\n        return axios.delete(`${this.baseURL}/user/${id}`, { withCredentials: true });\r\n    },\r\n    getProduct: function() {\r\n        return axios.get(`${this.baseURL}/product`);\r\n    },\r\n    getProductByID: function(id) {\r\n        return axios.get(`${this.baseURL}/product/${id}`);\r\n    },\r\n    getProductByBrand: function(brandID) {\r\n        return axios.get(`${this.baseURL}/product/brand/${brandID}`);\r\n    },\r\n    getProductByDepartment: function(departmentID) {\r\n        return axios.get(`${this.baseURL}/product/department/${departmentID}`);\r\n    },\r\n    createProduct: function(productObj) {\r\n        return axios.post(`${this.baseURL}/product`, productObj, { withCredentials: true });\r\n    },\r\n    editProduct: function(id, productObj) {\r\n        return axios.put(`${this.baseURL}/product/${id}`, productObj), { withCredentials: true };\r\n    },\r\n    deleteProduct: function(id) {\r\n        return axios.delete(`${this.baseURL}/product/${id}`, { withCredentials: true });\r\n    },\r\n    signIn: function(userObj) {\r\n        return axios.post(`${this.baseURL}/userlogin`, userObj, { withCredentials: true });\r\n    },\r\n    signOut: function() {\r\n        return axios.get(`${this.baseURL}/userlogout`, { withCredentials: true });\r\n    },\r\n    signUp: function(userObj) {\r\n        return axios.post(`${this.baseURL}/sign/up`, userObj, { withCredentials: true });\r\n    },\r\n    optOut: function() {\r\n        return axios.get(`${this.baseURL}/sign/out`, { withCredentials: true });\r\n    },\r\n    recoverAccount: function(userObj) {\r\n        return axios.post(`${this.baseURL}/sign/recover`, userObj, { withCredentials: true });\r\n    }\r\n}\r\n\r\n","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\product\\ProductCard.js",[],"C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\product\\Products.js",[],"C:\\Revature\\Code\\project0-guitarstore-tnb\\client\\src\\App.js",[],"C:\\Revature\\Code\\project0-guitarstore-tnb\\client\\src\\components\\profile\\UserInformationCard.js",["130"],"import React, {useState} from 'react'\r\nimport { Card, Form, Button, FormGroup } from 'react-bootstrap'\r\nimport API from '../util/API';\r\n\r\nconst UserInformationCard = (props) => {\r\n\r\n    const [show, setShow] = useState(false)\r\n    const [userUsername, setUserUsername] = useState(\"\");\r\n    const [userPassword, setUserPassword] = useState(\"\");\r\n    const [userEmail, setUserEmail] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const deleteUser = () => {\r\n        API.deleteUser(props.employee.id)\r\n    }\r\n\r\n    const editUser = () => {\r\n        const userObj = {\r\n            username: userUsername,\r\n            email: userEmail,\r\n            password: userPassword,\r\n            userType_UID: props.employee.userType_UID\r\n        }\r\n        API.editUser(props.employee.id, userObj);\r\n    }\r\n\r\n    const promoteUser = () => {\r\n        const userObj = {\r\n            username: props.employee.username,\r\n            email: props.employee.email,\r\n            password: props.employee.password,\r\n            userType_UID: 1\r\n        }\r\n        API.editUser(props.employee.id, userObj);\r\n    }\r\n\r\n    const demoteUser = () => {\r\n        const userObj = {\r\n            username: props.employee.username,\r\n            email: props.employee.email,\r\n            password: props.employee.password,\r\n            userType_UID: 2\r\n        }\r\n        API.editUser(props.employee.id, userObj);\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Card.Title>Email: {props.employee.email}</Card.Title>\r\n                <Card.Text>UserName: {props.employee.username}</Card.Text>\r\n                <Card.Text>Role: {props.employee.userType_UID}</Card.Text>\r\n                <Card.Footer>\r\n                    <Button onClick={() => setShow(!show)}>Edit User</Button>\r\n                    <Button onClick={() => deleteUser()}>Delete User</Button>\r\n                    <Button onClick={() => promoteUser()}>Promote User to Admin</Button>\r\n                    <Button onClick={() => demoteUser()}>Demote User to employee</Button>\r\n                    {show ? (\r\n                    <Form onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    editUser();\r\n                    }}>\r\n                        <br />\r\n                        <FormGroup>\r\n                        <input\r\n                            type=\"username\"\r\n                            name=\"username\"\r\n                            value={userUsername}\r\n                            placeholder=\"johnnyboy1337\"\r\n                            onChange={e => setUserUsername(e.target.value)}\r\n                        ></input>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                        <input\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            value={userEmail}\r\n                            placeholder=\"john@gmail.com\"\r\n                            onChange={e => setUserEmail(e.target.value)}\r\n                        ></input>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            value={userPassword}\r\n                            placeholder=\"Password\"\r\n                            onChange={e => setUserPassword(e.target.value)}\r\n                        ></input>\r\n                        </FormGroup>\r\n                        <Button type=\"submit\" disabled={loading} block={true}>\r\n                        {loading ? \"Loading...\" : \"Submit Changes\"}\r\n                        </Button>\r\n                    </Form>\r\n                ) : null}\r\n                </Card.Footer>\r\n                \r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserInformationCard\r\n","C:\\Revature\\Code\\project0-guitarstore-tnb\\client\\src\\components\\product\\Products.js",[],"C:\\Revature\\Code\\project0-guitarstore-tnb\\client\\src\\components\\util\\API.js",["131"],"C:\\Revature\\Code\\project0-guitarstore-tnb\\client\\src\\components\\product\\ProductCard.js",[],"C:\\Revature\\Code\\project0-guitarstore-tnb\\client\\src\\components\\routing\\Routes.js",["132"],"C:\\Revature\\Code\\project0-guitarstore-tnb\\client\\src\\components\\layout\\NavbarComponent.js",["133"],"C:\\Revature\\Code\\project0-guitarstore-tnb\\client\\src\\components\\layout\\Landing.js",[],"C:\\Revature\\Code\\project0-guitarstore-tnb\\client\\src\\components\\profile\\Profiles.js",[],"C:\\Revature\\Code\\project0-guitarstore-tnb\\client\\src\\components\\auth\\Login.js",["134","135"],"import React, { Fragment } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Button, Form, FormGroup } from \"react-bootstrap\";\r\nimport API from \"../util/API\";\r\n\r\nfunction Login (props) {\r\n\r\n  const [userUsername, setUserUsername] = useState(\"\");\r\n  const [userPassword, setUserPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const user = localStorage.getItem(\"user\")\r\n\r\n  const authHandler = () => {\r\n      setLoading(true);\r\n      const userObj = {\r\n        \"username\": userUsername,\r\n        \"password\": userPassword\r\n      }\r\n      try {\r\n        API.getUsers()\r\n        .then(res => res.data)\r\n        .then(data => props.setUser(data.filter(user => { return user.username == userUsername })))\r\n      } catch(err) {\r\n        console.log(err)\r\n      }\r\n      setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {user ? <h1>You are logged in!</h1> :\r\n        <Form\r\n          onSubmit={e => {\r\n              e.preventDefault();\r\n              authHandler();    \r\n          }}\r\n        >\r\n          <h1>Sign In</h1>\r\n          <br />\r\n          <FormGroup>\r\n          <input\r\n              type=\"username\"\r\n              name=\"username\"\r\n              value={userUsername}\r\n              placeholder=\"johnnyboy1337\"\r\n              onChange={e => setUserUsername(e.target.value)}\r\n          ></input>\r\n          </FormGroup>\r\n          <FormGroup>\r\n          <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={userPassword}\r\n              placeholder=\"Password\"\r\n              onChange={e => setUserPassword(e.target.value)}\r\n          ></input>\r\n          </FormGroup>\r\n          <Button type=\"submit\" disabled={loading} block={true}>\r\n          {loading ? \"Loading...\" : \"Sign In\"}\r\n          </Button>\r\n        </Form>\r\n      }\r\n    </Fragment>\r\n\r\n    );\r\n}\r\nexport default Login;","C:\\Revature\\Code\\project0-guitarstore-tnb\\client\\src\\components\\auth\\SignUp.js",[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":3,"column":41,"nodeType":"142","messageId":"143","endLine":3,"endColumn":45},{"ruleId":"140","severity":1,"message":"144","line":3,"column":47,"nodeType":"142","messageId":"143","endLine":3,"endColumn":58},{"ruleId":"145","severity":1,"message":"146","line":85,"column":58,"nodeType":"147","messageId":"148","endLine":85,"endColumn":60},{"ruleId":"140","severity":1,"message":"149","line":5,"column":7,"nodeType":"142","messageId":"143","endLine":5,"endColumn":11},{"ruleId":"140","severity":1,"message":"150","line":11,"column":21,"nodeType":"142","messageId":"143","endLine":11,"endColumn":31},{"ruleId":"151","severity":1,"message":"152","line":3,"column":1,"nodeType":"153","endLine":56,"endColumn":2},{"ruleId":"154","severity":1,"message":"155","line":12,"column":59,"nodeType":"156","messageId":"157","endLine":12,"endColumn":60},{"ruleId":"154","severity":1,"message":"155","line":36,"column":70,"nodeType":"156","messageId":"157","endLine":36,"endColumn":71},{"ruleId":"140","severity":1,"message":"150","line":11,"column":21,"nodeType":"142","messageId":"143","endLine":11,"endColumn":31},{"ruleId":"151","severity":1,"message":"152","line":3,"column":1,"nodeType":"153","endLine":35,"endColumn":2},{"ruleId":"145","severity":1,"message":"146","line":51,"column":60,"nodeType":"147","messageId":"148","endLine":51,"endColumn":62},{"ruleId":"145","severity":1,"message":"146","line":41,"column":59,"nodeType":"147","messageId":"148","endLine":41,"endColumn":61},{"ruleId":"140","severity":1,"message":"158","line":15,"column":13,"nodeType":"142","messageId":"143","endLine":15,"endColumn":20},{"ruleId":"145","severity":1,"message":"146","line":22,"column":80,"nodeType":"147","messageId":"148","endLine":22,"endColumn":82},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'FormControl' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'user' is assigned a value but never used.","'setLoading' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'userObj' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]