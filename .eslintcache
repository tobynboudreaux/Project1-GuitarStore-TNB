[{"C:\\Revature\\Code\\Project0-GuitarStore-TNB\\client\\src\\App.js":"1","C:\\Revature\\Code\\Project0-GuitarStore-TNB\\client\\src\\index.js":"2","C:\\Revature\\code\\project0-guitarstore-tnb\\client\\src\\App.js":"3","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\App.js":"4","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\index.js":"5","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\layout\\Landing.js":"6","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\layout\\NavbarComponent.js":"7","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\auth\\Login.js":"8","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\routing\\Routes.js":"9","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\profile\\Profiles.js":"10","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\auth\\SignUp.js":"11","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\profile\\UserInformationCard.js":"12","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\routing\\AuthRoutes.js":"13","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\util\\API.js":"14","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\product\\ProductCard.js":"15","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\product\\Products.js":"16"},{"size":677,"mtime":1607201390083,"results":"17","hashOfConfig":"18"},{"size":146,"mtime":1606766838767,"results":"19","hashOfConfig":"18"},{"size":607,"mtime":1606860692482,"results":"20","hashOfConfig":"21"},{"size":736,"mtime":1607895534282,"results":"22","hashOfConfig":"23"},{"size":146,"mtime":1606766838767,"results":"24","hashOfConfig":"23"},{"size":7149,"mtime":1607896647287,"results":"25","hashOfConfig":"23"},{"size":4531,"mtime":1607896527527,"results":"26","hashOfConfig":"23"},{"size":1776,"mtime":1607896760314,"results":"27","hashOfConfig":"23"},{"size":2733,"mtime":1607896113873,"results":"28","hashOfConfig":"23"},{"size":3125,"mtime":1607897459921,"results":"29","hashOfConfig":"23"},{"size":2329,"mtime":1607896832472,"results":"30","hashOfConfig":"23"},{"size":3165,"mtime":1607897656817,"results":"31","hashOfConfig":"23"},{"size":360,"mtime":1607895592977,"results":"32","hashOfConfig":"23"},{"size":1928,"mtime":1607897778554,"results":"33","hashOfConfig":"23"},{"size":5013,"mtime":1607897649516,"results":"34","hashOfConfig":"23"},{"size":2707,"mtime":1607897691648,"results":"35","hashOfConfig":"23"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uggycn",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cr2eb6",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10g6l31",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Revature\\Code\\Project0-GuitarStore-TNB\\client\\src\\App.js",[],"C:\\Revature\\Code\\Project0-GuitarStore-TNB\\client\\src\\index.js",[],"C:\\Revature\\code\\project0-guitarstore-tnb\\client\\src\\App.js",[],"C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\App.js",[],"C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\index.js",[],"C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\layout\\Landing.js",[],"C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\layout\\NavbarComponent.js",["70","71","72"],"C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\auth\\Login.js",[],"C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\routing\\Routes.js",[],"C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\profile\\Profiles.js",["73"],"import React from 'react'\r\nimport { Button, Form, FormGroup } from 'react-bootstrap';\r\nimport API from '../util/API';\r\nimport UserInformationCard from './UserInformationCard';\r\nconst user = localStorage.getItem(\"user\");\r\n\r\nclass Profiles extends React.Component {\r\n\r\n    state = {\r\n        employees: [{\r\n            \"uniqueID\": 1,\r\n            \"username\": \"ruben.dominguez\",\r\n            \"email\": \"ruben.dominguez@mail.com\",\r\n            \"userType_UID\": 1\r\n        }, {\r\n            \"uniqueID\": 2,\r\n            \"username\": \"toby.boudreaux\",\r\n            \"email\": \"toby.boudreaux@mail.com\",\r\n            \"userType_UID\": 1\r\n        }],\r\n        userName: \"\",\r\n        password: \"\",\r\n        email: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        API.getUsers()\r\n        fetch(\"http://3.139.235.28:8080/project0/user\")\r\n        .then(res => res.data)\r\n        .then(data => console.log(data))\r\n    }\r\n\r\n    postUser() {\r\n        const userObj = {\r\n            uniqueID: 0,\r\n            username: this.state.userName,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            userType_UID: 2\r\n        }\r\n        API.createUser(userObj)\r\n        .then(res => res.data)\r\n        .then(data => console.log(data))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Employees</h1>\r\n                <Form onSubmit={e => {\r\n                        e.preventDefault();\r\n                        this.postUser();    \r\n                    }}\r\n                    >\r\n                    <h1>Create Employee</h1>\r\n                    <br />\r\n                    <FormGroup>\r\n                    <input\r\n                        type=\"username\"\r\n                        name=\"username\"\r\n                        value={this.state.userName}\r\n                        placeholder=\"johnnyboy1337\"\r\n                        onChange={e => this.setState({ userName: e.target.value })}\r\n                    ></input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={this.state.email}\r\n                        placeholder=\"john@gmail.com\"\r\n                        onChange={e => this.setState({ email: e.target.value })}\r\n                    ></input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={this.state.password}\r\n                        placeholder=\"Password\"\r\n                        onChange={e => this.setState({ password: e.target.value })}\r\n                    ></input>\r\n                    </FormGroup>\r\n                    <Button type=\"submit\"  block={true}>\r\n                        Create\r\n                    </Button>\r\n                </Form>\r\n                {this.state.employees.map(e => (\r\n                    <UserInformationCard employee={e} />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Profiles\r\n","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\auth\\SignUp.js",[],"C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\profile\\UserInformationCard.js",["74"],"C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\routing\\AuthRoutes.js",[],"C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\util\\API.js",["75"],"C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\product\\ProductCard.js",["76"],"import React, {useState} from 'react'\r\nimport { Button, Card, Form } from 'react-bootstrap'\r\nimport API from '../util/API'\r\n\r\nconst ProductCard = (props) => {\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const deleteProduct = () => {\r\n        API.deleteProduct(props.product.uniqueID)\r\n    }\r\n\r\n    const editProduct = (event) => {\r\n        const product = {\r\n            uniqueID: 0,\r\n            posID: 99,\r\n            title: event.target.title.value,\r\n            description: event.target.description.value,\r\n            price: event.target.price.value,\r\n            department_UID: event.target.department.value,\r\n            style_UID: 3,\r\n            category_UID: 3,\r\n            brand_UID: event.target.brand.value,\r\n            premiumGear_UID: 3,\r\n            condition_UID: 3  \r\n        }\r\n        API.editProduct(props.product.uniqueID, product)\r\n        .then(res => res.data)\r\n        .then(data => console.log(data))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card key={props.product.uniqueID}>\r\n                <Card.Body>\r\n                    <Card.Title>{props.product.title}</Card.Title>\r\n                    {props.user ? <Card.Text>Position ID: {props.product.posID}</Card.Text> : null }\r\n                    <Card.Subtitle className=\"mb-2 text-muted\">Price: {props.product.price}</Card.Subtitle>\r\n                    <Card.Text>\r\n                    Description:\r\n                    <br></br>\r\n                    {props.product.description}\r\n                    </Card.Text>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <Card.Text>Department: {props.product.department.description}</Card.Text>\r\n                    <Card.Text>Style: {props.product.style.description}</Card.Text>\r\n                    <Card.Text>Category: {props.product.category.description}</Card.Text>\r\n                    <Card.Text>Brand: {props.product.brand.description}</Card.Text>\r\n                    <Card.Text>Premium Gear: {props.product.premiumGear.description}</Card.Text>\r\n                    <Card.Text>Condition: {props.product.condition.description}</Card.Text>\r\n                    <Card.Text>Features: </Card.Text>\r\n                    <Button onClick={() => setShow(!show)}>Edit Product</Button>\r\n                    {show ? (\r\n                        <Form onSubmit={e => {\r\n                            e.preventDefault();\r\n                            editProduct(e);\r\n                        }}>\r\n                        <Form.Label>\r\n                            title\r\n                            <Form.Control type=\"text\" name=\"title\" />\r\n                        </Form.Label>\r\n                        <Form.Label>\r\n                            description\r\n                            <Form.Control type=\"text\" name=\"description\" />\r\n                        </Form.Label>\r\n                        <Form.Label>\r\n                            price\r\n                            <Form.Control type=\"text\" name=\"price\" />\r\n                        </Form.Label>\r\n                        <Form.Label>\r\n                            brand\r\n                            <Form.Control type=\"text\" name=\"brand\" />\r\n                        </Form.Label>\r\n                        <Form.Label>\r\n                            department\r\n                            <Form.Control type=\"text\" name=\"department\" />\r\n                        </Form.Label>\r\n                        <Button type=\"submit\">Submit</Button>\r\n                    </Form>\r\n                    ): null}\r\n                    <Button onClick={() => deleteProduct()}>Delete Product</Button>\r\n                    {props.product.features ? \r\n                    props.product.features.map(feat => (\r\n                        <div>\r\n                            <Card.Text> {feat.description}</Card.Text>\r\n                        </div>\r\n                    )) : null}\r\n                    <br></br>\r\n                    <Card.Text>Specifications: </Card.Text>\r\n                    {props.product.specifications ? \r\n                    props.product.specifications.map(spec => (\r\n                        <div>\r\n                            <Card.Text> {spec.description}</Card.Text>\r\n                        </div>\r\n                    )) : null}\r\n                    <br></br>\r\n                    {props.product.reviewAverage !== 0.0 ? \r\n                    <Card.Title>Review Average: {props.product.reviewAverage}</Card.Title>\r\n                    :\r\n                    null}\r\n                    <br></br>\r\n                    <Card.Title>Reviews: </Card.Title>\r\n                    <br></br>\r\n                    {props.product.reviews ? props.product.reviews.map(r => (\r\n                        <Card>\r\n                        <Card.Text>{r.title}</Card.Text>\r\n                        <Card.Text>{r.body}</Card.Text>\r\n                        </Card>\r\n                    )) : null}\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductCard\r\n","C:\\revature\\code\\project0-guitarstore-tnb\\client\\src\\components\\product\\Products.js",[],{"ruleId":"77","severity":1,"message":"78","line":3,"column":41,"nodeType":"79","messageId":"80","endLine":3,"endColumn":45},{"ruleId":"77","severity":1,"message":"81","line":3,"column":47,"nodeType":"79","messageId":"80","endLine":3,"endColumn":58},{"ruleId":"82","severity":1,"message":"83","line":81,"column":58,"nodeType":"84","messageId":"85","endLine":81,"endColumn":60},{"ruleId":"77","severity":1,"message":"86","line":5,"column":7,"nodeType":"79","messageId":"80","endLine":5,"endColumn":11},{"ruleId":"77","severity":1,"message":"87","line":11,"column":21,"nodeType":"79","messageId":"80","endLine":11,"endColumn":31},{"ruleId":"88","severity":1,"message":"89","line":3,"column":1,"nodeType":"90","endLine":56,"endColumn":2},{"ruleId":null,"fatal":true,"severity":2,"message":"91","line":57,"column":44},"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'FormControl' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'user' is assigned a value but never used.","'setLoading' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Parsing error: Unexpected token, expected \"}\"\n\n  55 |                         <Form onSubmit={e => {\n  56 |                             e.preventDefault();\n> 57 |                             editProduct(e)}>\n     |                                            ^\n  58 |                         <Form.Label>\n  59 |                             title\n  60 |                             <Form.Control type=\"text\" name=\"title\" />"]